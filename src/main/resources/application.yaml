#  https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
app:
  host-url: http://localhost:8080
  test-mail: jira4jr@gmail.com
  templates-update-cache: 5s
  mail-sending-props:
    core-pool-size: 8
    max-pool-size: 100

spring:
  jpa:
    show-sql: true
    open-in-view: false

# validate db by model
    hibernate:
      ddl-auto: validate

    properties:
      #  http://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html#configurations
      hibernate:
#        globally_quoted_identifiers: true
        format_sql: true
        default_batch_fetch_size: 20
        # https://stackoverflow.com/questions/21257819/what-is-the-difference-between-hibernate-jdbc-fetch-size-and-hibernate-jdbc-batc
        jdbc.batch_size: 20
  datasource:
    url: jdbc:postgresql://localhost:5432/jira
    username: ${JIRARUSH_DB_USER}
    password: ${JIRARUSH_DB_PASSWORD}

  liquibase:
    changeLog: "classpath:db/changelog.sql"

  # Jackson Fields Serialization
  jackson:
    visibility:
      field: any
      getter: none
      setter: none
      is-getter: none

  # https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties-cache
  cache:
    cache-names: users
    caffeine.spec: maximumSize=10000,expireAfterAccess=5m

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: 19ef46f375d52693afa9
            client-secret: ${JIRARUSH_GITHUB_SECRET}
            scope:
              - email
          google:
            client-id: 329113642700-f8if6pu68j2repq3ef6umd5jgiliup60.apps.googleusercontent.com
            client-secret: ${JIRARUSH_GOOGLE_SECRET}
            scope:
              - email
              - profile
          gitlab:
            client-id: 7b8cc5e259fbc55aa68edd20333f4698abd62ab22eac7b77d5bfe04f991ef2c2
            client-secret: ${JIRARUSH_GITLAB_SECRET}
            client-name: GitLab
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: read_user
        provider:
          gitlab:
            authorization-uri: https://gitlab.com/oauth/authorize
            token-uri: https://gitlab.com/oauth/token
            user-info-uri: https://gitlab.com/api/v4/user
            user-name-attribute: email

  sql:
    init:
      mode: always

  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
    host: smtp.gmail.com
    username: jira4jr@gmail.com
    password: ${JIRARUSH_MAIL_PASSWORD}
    port: 587
  thymeleaf.check-template-location: false

logging:
  level:
    root: WARN
    com.javarush.jira: DEBUG
    com.javarush.jira.common.config.MvcConfig: WARN
    org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: DEBUG

server:
#  https://springdoc.org/index.html#how-can-i-deploy-springdoc-openapi-ui-behind-a-reverse-proxy
  forward-headers-strategy: framework
  servlet:
    encoding:
      charset: UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly
      enabled: true # Enable http encoding support
      force: true
springdoc.swagger-ui.path: /doc
